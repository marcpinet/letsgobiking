//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LetsGoBikingServer.JCDService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimplifiedGeoCoordinate", Namespace="http://schemas.datacontract.org/2004/07/ProxyServer")]
    public partial class SimplifiedGeoCoordinate : object
    {
        
        private double latitudeField;
        
        private double longitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude
        {
            get
            {
                return this.latitudeField;
            }
            set
            {
                this.latitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude
        {
            get
            {
                return this.longitudeField;
            }
            set
            {
                this.longitudeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/ProxyServer")]
    public partial class Station : object
    {
        
        private string addressField;
        
        private int available_bike_standsField;
        
        private int available_bikesField;
        
        private bool bankingField;
        
        private int bike_standsField;
        
        private bool bonusField;
        
        private string contract_nameField;
        
        private long last_updateField;
        
        private string nameField;
        
        private int numberField;
        
        private LetsGoBikingServer.JCDService.Position positionField;
        
        private string statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int available_bike_stands
        {
            get
            {
                return this.available_bike_standsField;
            }
            set
            {
                this.available_bike_standsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int available_bikes
        {
            get
            {
                return this.available_bikesField;
            }
            set
            {
                this.available_bikesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool banking
        {
            get
            {
                return this.bankingField;
            }
            set
            {
                this.bankingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bike_stands
        {
            get
            {
                return this.bike_standsField;
            }
            set
            {
                this.bike_standsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bonus
        {
            get
            {
                return this.bonusField;
            }
            set
            {
                this.bonusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contract_name
        {
            get
            {
                return this.contract_nameField;
            }
            set
            {
                this.contract_nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long last_update
        {
            get
            {
                return this.last_updateField;
            }
            set
            {
                this.last_updateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LetsGoBikingServer.JCDService.Position position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/ProxyServer")]
    public partial class Position : object
    {
        
        private double latField;
        
        private double lngField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat
        {
            get
            {
                return this.latField;
            }
            set
            {
                this.latField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lng
        {
            get
            {
                return this.lngField;
            }
            set
            {
                this.lngField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LetsGoBikingServer.JCDService.IJCDService")]
    public interface IJCDService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDService/GetClosestStation", ReplyAction="http://tempuri.org/IJCDService/GetClosestStationResponse")]
        System.Threading.Tasks.Task<LetsGoBikingServer.JCDService.Station> GetClosestStationAsync(LetsGoBikingServer.JCDService.SimplifiedGeoCoordinate coordinates, string city, int minBikes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IJCDServiceChannel : LetsGoBikingServer.JCDService.IJCDService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class JCDServiceClient : System.ServiceModel.ClientBase<LetsGoBikingServer.JCDService.IJCDService>, LetsGoBikingServer.JCDService.IJCDService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public JCDServiceClient() : 
                base(JCDServiceClient.GetDefaultBinding(), JCDServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IJCDService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public JCDServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(JCDServiceClient.GetBindingForEndpoint(endpointConfiguration), JCDServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public JCDServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(JCDServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public JCDServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(JCDServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public JCDServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<LetsGoBikingServer.JCDService.Station> GetClosestStationAsync(LetsGoBikingServer.JCDService.SimplifiedGeoCoordinate coordinates, string city, int minBikes)
        {
            return base.Channel.GetClosestStationAsync(coordinates, city, minBikes);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IJCDService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IJCDService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8001/ProxyServer");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return JCDServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IJCDService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return JCDServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IJCDService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IJCDService,
        }
    }
}
